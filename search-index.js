var searchIndex = {};
searchIndex["rsaltpack"] = {"doc":"","items":[[11,"from_slice","sodiumoxide::crypto::box_::curve25519xsalsa20poly1305","`from_slice()` creates an object from a byte slice",0,null],[11,"clone","","",0,{"inputs":[{"name":"publickey"}],"output":{"name":"publickey"}}],[11,"eq","","",0,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"encode","","",0,{"inputs":[{"name":"publickey"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",0,null],[11,"index","","",0,null],[11,"index","","",0,null],[11,"index","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"publickey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",0,null],[11,"partial_cmp","","",0,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"drop","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"secretkey"}],"output":{"name":"secretkey"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",1,null],[11,"eq","","",1,{"inputs":[{"name":"secretkey"},{"name":"secretkey"}],"output":{"name":"bool"}}],[11,"encode","","",1,{"inputs":[{"name":"secretkey"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",1,null],[11,"index","","",1,null],[11,"index","","",1,null],[11,"index","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"secretkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"nonce"}],"output":{"name":"nonce"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",2,null],[11,"eq","","",2,{"inputs":[{"name":"nonce"},{"name":"nonce"}],"output":{"name":"bool"}}],[11,"encode","","",2,{"inputs":[{"name":"nonce"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",2,null],[11,"index","","",2,null],[11,"index","","",2,null],[11,"index","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"nonce"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",3,null],[11,"clone","","",3,{"inputs":[{"name":"precomputedkey"}],"output":{"name":"precomputedkey"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",3,null],[11,"eq","","",3,{"inputs":[{"name":"precomputedkey"},{"name":"precomputedkey"}],"output":{"name":"bool"}}],[11,"encode","","",3,{"inputs":[{"name":"precomputedkey"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",3,null],[11,"index","","",3,null],[11,"index","","",3,null],[11,"index","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"precomputedkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","sodiumoxide::crypto::sign::ed25519","",4,null],[11,"clone","","",4,{"inputs":[{"name":"seed"}],"output":{"name":"seed"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",4,null],[11,"eq","","",4,{"inputs":[{"name":"seed"},{"name":"seed"}],"output":{"name":"bool"}}],[11,"encode","","",4,{"inputs":[{"name":"seed"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",4,null],[11,"index","","",4,null],[11,"index","","",4,null],[11,"index","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"seed"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"secretkey"}],"output":{"name":"secretkey"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",5,null],[11,"eq","","",5,{"inputs":[{"name":"secretkey"},{"name":"secretkey"}],"output":{"name":"bool"}}],[11,"encode","","",5,{"inputs":[{"name":"secretkey"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",5,null],[11,"index","","",5,null],[11,"index","","",5,null],[11,"index","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"secretkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"publickey"}],"output":{"name":"publickey"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",6,null],[11,"eq","","",6,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"encode","","",6,{"inputs":[{"name":"publickey"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",6,null],[11,"index","","",6,null],[11,"index","","",6,null],[11,"index","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"publickey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",6,null],[11,"partial_cmp","","",6,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"ordering"}}],[11,"hash","","",6,null],[11,"clone","","",7,{"inputs":[{"name":"signature"}],"output":{"name":"signature"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",7,null],[11,"eq","","",7,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"encode","","",7,{"inputs":[{"name":"signature"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",7,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"signature"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",7,null],[11,"partial_cmp","","",7,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"signature"},{"name":"signature"}],"output":{"name":"ordering"}}],[11,"hash","","",7,null],[11,"drop","sodiumoxide::crypto::sign::edwards25519sha512batch","",8,null],[11,"clone","","",8,{"inputs":[{"name":"secretkey"}],"output":{"name":"secretkey"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",8,null],[11,"eq","","",8,{"inputs":[{"name":"secretkey"},{"name":"secretkey"}],"output":{"name":"bool"}}],[11,"encode","","",8,{"inputs":[{"name":"secretkey"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",8,null],[11,"index","","",8,null],[11,"index","","",8,null],[11,"index","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"secretkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"publickey"}],"output":{"name":"publickey"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",9,null],[11,"eq","","",9,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"encode","","",9,{"inputs":[{"name":"publickey"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"publickey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",9,null],[11,"partial_cmp","","",9,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"publickey"},{"name":"publickey"}],"output":{"name":"ordering"}}],[11,"hash","","",9,null],[11,"drop","sodiumoxide::crypto::scalarmult::curve25519","",10,null],[11,"clone","","",10,{"inputs":[{"name":"scalar"}],"output":{"name":"scalar"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",10,null],[11,"eq","","",10,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"bool"}}],[11,"encode","","",10,{"inputs":[{"name":"scalar"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",10,null],[11,"index","","",10,null],[11,"index","","",10,null],[11,"index","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"scalar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"groupelement"}],"output":{"name":"groupelement"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",11,null],[11,"eq","","",11,{"inputs":[{"name":"groupelement"},{"name":"groupelement"}],"output":{"name":"bool"}}],[11,"encode","","",11,{"inputs":[{"name":"groupelement"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",11,null],[11,"index","","",11,null],[11,"index","","",11,null],[11,"index","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"groupelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","sodiumoxide::crypto::auth::hmacsha512","",12,null],[11,"clone","","",12,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",12,null],[11,"eq","","",12,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",12,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"tag"}],"output":{"name":"tag"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",13,null],[11,"eq","","",13,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"encode","","",13,{"inputs":[{"name":"tag"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",13,null],[11,"index","","",13,null],[11,"index","","",13,null],[11,"index","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"tag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",13,null],[11,"partial_cmp","","",13,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"cmp","","",13,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"ordering"}}],[11,"hash","","",13,null],[11,"drop","","",14,null],[11,"init","","`init()` initializes an authentication structure using a secret key &#39;k&#39;.",14,null],[11,"update","","`update()` can be called more than once in order to compute the authenticator\nfrom sequential chunks of the message.",14,null],[11,"finalize","","`finalize()` finalizes the authenticator computation and returns a `Tag`.",14,{"inputs":[{"name":"state"}],"output":{"name":"tag"}}],[11,"drop","sodiumoxide::crypto::auth::hmacsha512256","",15,null],[11,"clone","","",15,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",15,null],[11,"eq","","",15,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",15,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",15,null],[11,"index","","",15,null],[11,"index","","",15,null],[11,"index","","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"tag"}],"output":{"name":"tag"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",16,null],[11,"eq","","",16,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"encode","","",16,{"inputs":[{"name":"tag"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",16,null],[11,"index","","",16,null],[11,"index","","",16,null],[11,"index","","",16,null],[11,"fmt","","",16,{"inputs":[{"name":"tag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",16,null],[11,"partial_cmp","","",16,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"cmp","","",16,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"ordering"}}],[11,"hash","","",16,null],[11,"drop","","",17,null],[11,"init","","`init()` initializes an authentication structure using a secret key &#39;k&#39;.",17,null],[11,"update","","`update()` can be called more than once in order to compute the authenticator\nfrom sequential chunks of the message.",17,null],[11,"finalize","","`finalize()` finalizes the authenticator computation and returns a `Tag`.",17,{"inputs":[{"name":"state"}],"output":{"name":"tag"}}],[11,"drop","sodiumoxide::crypto::auth::hmacsha256","",18,null],[11,"clone","","",18,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",18,null],[11,"eq","","",18,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",18,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",18,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",18,null],[11,"index","","",18,null],[11,"index","","",18,null],[11,"index","","",18,null],[11,"fmt","","",18,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"tag"}],"output":{"name":"tag"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",19,null],[11,"eq","","",19,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"encode","","",19,{"inputs":[{"name":"tag"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",19,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",19,null],[11,"index","","",19,null],[11,"index","","",19,null],[11,"index","","",19,null],[11,"fmt","","",19,{"inputs":[{"name":"tag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",19,null],[11,"partial_cmp","","",19,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"cmp","","",19,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"ordering"}}],[11,"hash","","",19,null],[11,"drop","","",20,null],[11,"init","","`init()` initializes an authentication structure using a secret key &#39;k&#39;.",20,null],[11,"update","","`update()` can be called more than once in order to compute the authenticator\nfrom sequential chunks of the message.",20,null],[11,"finalize","","`finalize()` finalizes the authenticator computation and returns a `Tag`.",20,{"inputs":[{"name":"state"}],"output":{"name":"tag"}}],[11,"clone","sodiumoxide::crypto::hash::sha512","",21,{"inputs":[{"name":"digest"}],"output":{"name":"digest"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",21,null],[11,"eq","","",21,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"encode","","",21,{"inputs":[{"name":"digest"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",21,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",21,null],[11,"index","","",21,null],[11,"index","","",21,null],[11,"index","","",21,null],[11,"fmt","","",21,{"inputs":[{"name":"digest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",21,null],[11,"partial_cmp","","",21,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"cmp","","",21,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"ordering"}}],[11,"hash","","",21,null],[11,"clone","sodiumoxide::crypto::hash::sha256","",22,{"inputs":[{"name":"digest"}],"output":{"name":"digest"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",22,null],[11,"eq","","",22,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"encode","","",22,{"inputs":[{"name":"digest"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",22,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",22,null],[11,"index","","",22,null],[11,"index","","",22,null],[11,"index","","",22,null],[11,"fmt","","",22,{"inputs":[{"name":"digest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",22,null],[11,"partial_cmp","","",22,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"cmp","","",22,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"ordering"}}],[11,"hash","","",22,null],[11,"drop","sodiumoxide::crypto::secretbox::xsalsa20poly1305","",23,null],[11,"clone","","",23,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",23,null],[11,"eq","","",23,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",23,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",23,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",23,null],[11,"index","","",23,null],[11,"index","","",23,null],[11,"index","","",23,null],[11,"fmt","","",23,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"nonce"}],"output":{"name":"nonce"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",24,null],[11,"eq","","",24,{"inputs":[{"name":"nonce"},{"name":"nonce"}],"output":{"name":"bool"}}],[11,"encode","","",24,{"inputs":[{"name":"nonce"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",24,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",24,null],[11,"index","","",24,null],[11,"index","","",24,null],[11,"index","","",24,null],[11,"fmt","","",24,{"inputs":[{"name":"nonce"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","sodiumoxide::crypto::onetimeauth::poly1305","",25,null],[11,"clone","","",25,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",25,null],[11,"eq","","",25,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",25,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",25,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",25,null],[11,"index","","",25,null],[11,"index","","",25,null],[11,"index","","",25,null],[11,"fmt","","",25,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"tag"}],"output":{"name":"tag"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",26,null],[11,"eq","","",26,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"encode","","",26,{"inputs":[{"name":"tag"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",26,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",26,null],[11,"index","","",26,null],[11,"index","","",26,null],[11,"index","","",26,null],[11,"fmt","","",26,{"inputs":[{"name":"tag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",26,null],[11,"partial_cmp","","",26,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"cmp","","",26,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"ordering"}}],[11,"hash","","",26,null],[11,"clone","sodiumoxide::crypto::pwhash::scryptsalsa208sha256","",27,{"inputs":[{"name":"opslimit"}],"output":{"name":"opslimit"}}],[11,"clone","","",28,{"inputs":[{"name":"memlimit"}],"output":{"name":"memlimit"}}],[11,"clone","","",29,{"inputs":[{"name":"salt"}],"output":{"name":"salt"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",29,null],[11,"eq","","",29,{"inputs":[{"name":"salt"},{"name":"salt"}],"output":{"name":"bool"}}],[11,"encode","","",29,{"inputs":[{"name":"salt"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",29,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",29,null],[11,"index","","",29,null],[11,"index","","",29,null],[11,"index","","",29,null],[11,"fmt","","",29,{"inputs":[{"name":"salt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"hashedpassword"}],"output":{"name":"hashedpassword"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",30,null],[11,"eq","","",30,{"inputs":[{"name":"hashedpassword"},{"name":"hashedpassword"}],"output":{"name":"bool"}}],[11,"encode","","",30,{"inputs":[{"name":"hashedpassword"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",30,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",30,null],[11,"index","","",30,null],[11,"index","","",30,null],[11,"index","","",30,null],[11,"fmt","","",30,{"inputs":[{"name":"hashedpassword"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","sodiumoxide::crypto::stream::xsalsa20","",31,null],[11,"clone","","",31,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",31,null],[11,"eq","","",31,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",31,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",31,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",31,null],[11,"index","","",31,null],[11,"index","","",31,null],[11,"index","","",31,null],[11,"fmt","","",31,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"nonce"}],"output":{"name":"nonce"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",32,null],[11,"eq","","",32,{"inputs":[{"name":"nonce"},{"name":"nonce"}],"output":{"name":"bool"}}],[11,"encode","","",32,{"inputs":[{"name":"nonce"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",32,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",32,null],[11,"index","","",32,null],[11,"index","","",32,null],[11,"index","","",32,null],[11,"fmt","","",32,{"inputs":[{"name":"nonce"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","sodiumoxide::crypto::stream::aes128ctr","",33,null],[11,"clone","","",33,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",33,null],[11,"eq","","",33,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",33,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",33,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",33,null],[11,"index","","",33,null],[11,"index","","",33,null],[11,"index","","",33,null],[11,"fmt","","",33,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"nonce"}],"output":{"name":"nonce"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",34,null],[11,"eq","","",34,{"inputs":[{"name":"nonce"},{"name":"nonce"}],"output":{"name":"bool"}}],[11,"encode","","",34,{"inputs":[{"name":"nonce"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",34,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",34,null],[11,"index","","",34,null],[11,"index","","",34,null],[11,"index","","",34,null],[11,"fmt","","",34,{"inputs":[{"name":"nonce"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","sodiumoxide::crypto::stream::salsa208","",35,null],[11,"clone","","",35,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",35,null],[11,"eq","","",35,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",35,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",35,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",35,null],[11,"index","","",35,null],[11,"index","","",35,null],[11,"index","","",35,null],[11,"fmt","","",35,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"nonce"}],"output":{"name":"nonce"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",36,null],[11,"eq","","",36,{"inputs":[{"name":"nonce"},{"name":"nonce"}],"output":{"name":"bool"}}],[11,"encode","","",36,{"inputs":[{"name":"nonce"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",36,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",36,null],[11,"index","","",36,null],[11,"index","","",36,null],[11,"index","","",36,null],[11,"fmt","","",36,{"inputs":[{"name":"nonce"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","sodiumoxide::crypto::stream::salsa2012","",37,null],[11,"clone","","",37,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",37,null],[11,"eq","","",37,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",37,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",37,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",37,null],[11,"index","","",37,null],[11,"index","","",37,null],[11,"index","","",37,null],[11,"fmt","","",37,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"nonce"}],"output":{"name":"nonce"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",38,null],[11,"eq","","",38,{"inputs":[{"name":"nonce"},{"name":"nonce"}],"output":{"name":"bool"}}],[11,"encode","","",38,{"inputs":[{"name":"nonce"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",38,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",38,null],[11,"index","","",38,null],[11,"index","","",38,null],[11,"index","","",38,null],[11,"fmt","","",38,{"inputs":[{"name":"nonce"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","sodiumoxide::crypto::stream::salsa20","",39,null],[11,"clone","","",39,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",39,null],[11,"eq","","",39,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",39,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",39,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",39,null],[11,"index","","",39,null],[11,"index","","",39,null],[11,"index","","",39,null],[11,"fmt","","",39,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"nonce"}],"output":{"name":"nonce"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",40,null],[11,"eq","","",40,{"inputs":[{"name":"nonce"},{"name":"nonce"}],"output":{"name":"bool"}}],[11,"encode","","",40,{"inputs":[{"name":"nonce"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",40,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",40,null],[11,"index","","",40,null],[11,"index","","",40,null],[11,"index","","",40,null],[11,"fmt","","",40,{"inputs":[{"name":"nonce"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","sodiumoxide::crypto::stream::chacha20","",41,null],[11,"clone","","",41,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",41,null],[11,"eq","","",41,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",41,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",41,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",41,null],[11,"index","","",41,null],[11,"index","","",41,null],[11,"index","","",41,null],[11,"fmt","","",41,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"nonce"}],"output":{"name":"nonce"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",42,null],[11,"eq","","",42,{"inputs":[{"name":"nonce"},{"name":"nonce"}],"output":{"name":"bool"}}],[11,"encode","","",42,{"inputs":[{"name":"nonce"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",42,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",42,null],[11,"index","","",42,null],[11,"index","","",42,null],[11,"index","","",42,null],[11,"fmt","","",42,{"inputs":[{"name":"nonce"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","sodiumoxide::crypto::shorthash::siphash24","",43,{"inputs":[{"name":"digest"}],"output":{"name":"digest"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",43,null],[11,"eq","","",43,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"encode","","",43,{"inputs":[{"name":"digest"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",43,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",43,null],[11,"index","","",43,null],[11,"index","","",43,null],[11,"index","","",43,null],[11,"fmt","","",43,{"inputs":[{"name":"digest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",43,null],[11,"partial_cmp","","",43,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"option"}}],[11,"lt","","",43,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"le","","",43,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"ge","","",43,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"gt","","",43,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"bool"}}],[11,"cmp","","",43,{"inputs":[{"name":"digest"},{"name":"digest"}],"output":{"name":"ordering"}}],[11,"hash","","",43,null],[11,"drop","","",44,null],[11,"clone","","",44,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from_slice","","`from_slice()` creates an object from a byte slice",44,null],[11,"eq","","",44,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"encode","","",44,{"inputs":[{"name":"key"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",44,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"index","","",44,null],[11,"index","","",44,null],[11,"index","","",44,null],[11,"index","","",44,null],[11,"fmt","","",44,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"PublicKey","rsaltpack","`PublicKey` for asymmetric authenticated encryption",null,null],[12,"0","","",0,null],[3,"SecretKey","","`SecretKey` for asymmetric authenticated encryption",null,null],[12,"0","","",1,null],[3,"CBNonce","","`Nonce` for asymmetric authenticated encryption",null,null],[12,"0","","",2,null],[3,"Key","","`Key` for symmetric authenticated encryption",null,null],[12,"0","","",23,null],[3,"SBNonce","","`Nonce` for symmetric authenticated encryption",null,null],[12,"0","","",24,null],[3,"KeyPair","","",null,null],[12,"p","","",45,null],[12,"s","","",45,null],[4,"SaltpackMessageType","","",null,null],[13,"ENCRYPTEDMESSAGE","","",46,null],[13,"SIGNEDMESSAGE","","",46,null],[13,"DETACHEDSIGNATURE","","",46,null],[0,"compose","","Asymmetrically encrypt or sign data for multiple recipients using the saltpack format.",null,null],[3,"Saltpack","rsaltpack::compose","",null,null],[3,"ArmoredSaltpack","","",null,null],[5,"encrypt_to_binary","","",null,null],[11,"encrypt","","Use this constructor if you want to encrypt data.",47,{"inputs":[{"name":"option"},{"name":"vec"}],"output":{"name":"saltpack"}}],[11,"cancel","","Prevents panic on drop if not all data as been read.",47,{"inputs":[{"name":"saltpack"}],"output":null}],[11,"is_done","","Returns true, if all data has been read from this Saltpack.",47,{"inputs":[{"name":"saltpack"}],"output":{"name":"bool"}}],[11,"armor","","Consumes self and returns an `ArmoredSaltpack` that outputs the armored\nversion of the encrypted data.",47,{"inputs":[{"name":"saltpack"},{"name":"str"}],"output":{"name":"result"}}],[11,"predict_len","","Tries to predict the length of all unwritten data.",47,{"inputs":[{"name":"saltpack"}],"output":{"name":"usize"}}],[11,"drop","","",47,{"inputs":[{"name":"saltpack"}],"output":null}],[11,"write","","",47,null],[11,"flush","","",47,{"inputs":[{"name":"saltpack"}],"output":{"name":"result"}}],[11,"read","","",47,null],[11,"write","","",48,null],[11,"flush","","",48,{"inputs":[{"name":"armoredsaltpack"}],"output":{"name":"result"}}],[11,"read","","Writes the armored saltpack (ascii only characters) as binary data (u8)\ninto `buffer`.",48,null],[11,"new","","",48,{"inputs":[{"name":"saltpack"},{"name":"str"}],"output":{"name":"result"}}],[11,"to_string","","Outputs all",48,{"inputs":[{"name":"armoredsaltpack"}],"output":{"name":"string"}}],[11,"is_done","","",48,{"inputs":[{"name":"armoredsaltpack"}],"output":{"name":"bool"}}],[11,"cancel","","",48,{"inputs":[{"name":"armoredsaltpack"}],"output":null}],[0,"parse","rsaltpack","",null,null],[3,"PublicKey","rsaltpack::parse","`PublicKey` for asymmetric authenticated encryption",null,null],[12,"0","","",0,null],[3,"Recipient","","",null,null],[3,"SaltpackHeader10","","",null,null],[4,"ParseError","","",null,null],[13,"WrongSaltpackVersion","","",49,null],[13,"UnknownMode","","",49,null],[13,"NotWellFormed","","",49,null],[5,"read_and_assert_header_v_1_0","","",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"print_debug_as_str","","",null,null],[11,"fmt","","",50,{"inputs":[{"name":"recipient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"saltpackheader10"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"armor","rsaltpack","",null,null],[11,"step_by","core::ops","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",52,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"default","core::num","",53,{"inputs":[],"output":{"name":"wrapping"}}],[11,"fmt","","",53,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",53,null],[11,"shr","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",53,null],[11,"shl","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",53,null],[11,"shr","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",53,null],[11,"shl","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",53,null],[11,"shr","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",53,null],[11,"shl","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",53,null],[11,"shr","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",53,null],[11,"shl","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",53,null],[11,"shr","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",53,null],[11,"shl","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",53,null],[11,"shr","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",53,null],[11,"shl","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",53,null],[11,"shr","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",53,null],[11,"shl","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",53,null],[11,"shr","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",53,null],[11,"shl","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",53,null],[11,"shr","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",53,null],[11,"shl","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",53,null],[11,"shr","","",53,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",53,null],[11,"add","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",53,null],[11,"sub","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",53,null],[11,"mul","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",53,null],[11,"div","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",53,null],[11,"rem","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",53,null],[11,"not","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",53,null],[11,"bitor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",53,null],[11,"bitand","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",53,null],[11,"add","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",53,null],[11,"sub","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",53,null],[11,"mul","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",53,null],[11,"div","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",53,null],[11,"rem","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",53,null],[11,"not","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",53,null],[11,"bitor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",53,null],[11,"bitand","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",53,null],[11,"add","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",53,null],[11,"sub","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",53,null],[11,"mul","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",53,null],[11,"div","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",53,null],[11,"rem","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",53,null],[11,"not","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",53,null],[11,"bitor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",53,null],[11,"bitand","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",53,null],[11,"add","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",53,null],[11,"sub","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",53,null],[11,"mul","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",53,null],[11,"div","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",53,null],[11,"rem","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",53,null],[11,"not","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",53,null],[11,"bitor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",53,null],[11,"bitand","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",53,null],[11,"add","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",53,null],[11,"sub","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",53,null],[11,"mul","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",53,null],[11,"div","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",53,null],[11,"rem","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",53,null],[11,"not","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",53,null],[11,"bitor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",53,null],[11,"bitand","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",53,null],[11,"add","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",53,null],[11,"sub","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",53,null],[11,"mul","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",53,null],[11,"div","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",53,null],[11,"rem","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",53,null],[11,"not","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",53,null],[11,"bitor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",53,null],[11,"bitand","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",53,null],[11,"add","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",53,null],[11,"sub","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",53,null],[11,"mul","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",53,null],[11,"div","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",53,null],[11,"rem","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",53,null],[11,"not","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",53,null],[11,"bitor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",53,null],[11,"bitand","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",53,null],[11,"add","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",53,null],[11,"sub","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",53,null],[11,"mul","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",53,null],[11,"div","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",53,null],[11,"rem","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",53,null],[11,"not","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",53,null],[11,"bitor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",53,null],[11,"bitand","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",53,null],[11,"add","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",53,null],[11,"sub","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",53,null],[11,"mul","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",53,null],[11,"div","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",53,null],[11,"rem","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",53,null],[11,"not","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",53,null],[11,"bitor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",53,null],[11,"bitand","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",53,null],[11,"add","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",53,null],[11,"sub","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",53,null],[11,"mul","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",53,null],[11,"div","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",53,null],[11,"rem","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",53,null],[11,"not","","",53,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",53,null],[11,"bitor","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",53,null],[11,"bitand","","",53,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",53,null],[11,"fmt","","",54,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",54,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",55,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",55,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",56,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",57,null],[11,"fmt","","",57,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",57,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",57,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",57,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",57,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",57,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",57,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",57,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",57,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",58,null],[11,"get","","Dereferences the content.",58,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",58,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",59,null],[11,"clone","","",59,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",59,null],[11,"fmt","","",59,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",60,null],[11,"eq","","",60,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",60,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",60,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",60,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",61,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",61,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",52,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",62,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",63,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",63,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"rangeinclusive"},{"name":"rangeinclusive"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"rangeinclusive"},{"name":"rangeinclusive"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"fmt","","",64,{"inputs":[{"name":"rangeinclusive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",64,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"eq","","",65,{"inputs":[{"name":"rangetoinclusive"},{"name":"rangetoinclusive"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"rangetoinclusive"},{"name":"rangetoinclusive"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"rangetoinclusive"}],"output":{"name":"rangetoinclusive"}}],[11,"fmt","","",65,{"inputs":[{"name":"rangetoinclusive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",66,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",66,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",66,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","rsaltpack","",67,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",67,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",67,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",67,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",67,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",67,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",67,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",68,null],[11,"fmt","","",68,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",68,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",69,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",70,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"default","","",71,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"default","","",72,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"clone","","",73,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",69,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",69,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",69,null],[11,"swap","","Stores a value into the bool, returning the old value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",69,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",70,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",70,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",70,null],[11,"swap","","Stores a value into the isize, returning the old value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange","","Stores a value into the `isize` if the current value is the same as the `current` value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange_weak","","Stores a value into the `isize if the current value is the same as the `current` value.",70,null],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",71,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",71,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",71,null],[11,"swap","","Stores a value into the usize, returning the old value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange","","Stores a value into the `usize` if the current value is the same as the `current` value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange_weak","","Stores a value into the `usize` if the current value is the same as the `current` value.",71,null],[11,"fetch_add","","Add to the current usize, returning the previous value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",72,null],[11,"load","","Loads a value from the pointer.",72,null],[11,"store","","Stores a value into the pointer.",72,null],[11,"swap","","Stores a value into the pointer, returning the old value.",72,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",72,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",72,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",72,null],[11,"fmt","","",71,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",69,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",74,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",74,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",74,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",74,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",74,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",74,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",74,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",76,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",76,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",76,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",76,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",76,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",76,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",76,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",76,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",76,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",77,null],[11,"clone","","",77,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",78,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",78,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",78,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",78,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",79,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",79,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",80,null],[11,"deref","","",79,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",79,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",81,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",81,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",81,null],[11,"clone","core::char","",82,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",83,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",82,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"clone","","",84,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",85,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",84,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"count","","",84,{"inputs":[{"name":"escapedefault"}],"output":{"name":"usize"}}],[11,"nth","","",84,{"inputs":[{"name":"escapedefault"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",84,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",86,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",86,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",87,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",87,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"next_back","","",87,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",88,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",88,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"clone","","",89,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",90,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",89,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",89,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",89,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",89,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",91,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",91,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"next_back","","",91,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",92,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",92,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next_back","","",92,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",93,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",93,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next_back","","",93,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",94,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",94,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",95,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",95,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"nth","","",95,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",95,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",95,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",96,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",96,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",96,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",96,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",96,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",96,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",96,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",97,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"clone","","",98,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",98,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"clone","","",99,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",99,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",99,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",99,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",99,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"next_back","","",99,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"clone","","",100,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",100,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",100,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"clone","","",101,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",101,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"clone","","",102,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",102,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next_back","","",102,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",103,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",103,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",103,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",103,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",103,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",103,null],[11,"next_back","","",103,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",104,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",104,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"next_back","","",104,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",62,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",64,{"inputs":[{"name":"rangeinclusive"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",105,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next","","",105,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next","","",105,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next","core::ops","",52,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"next_back","","",52,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",62,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"clone","core::iter","",106,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",106,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"next_back","","",106,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",107,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"next_back","","",107,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",107,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",107,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",107,{"inputs":[],"output":{"name":"empty"}}],[11,"clone","","",108,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",108,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"next_back","","",108,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",108,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",109,null],[11,"fmt","","",109,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",109,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",109,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",109,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",109,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",109,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",109,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",109,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",109,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",109,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",109,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",109,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",109,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",109,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",109,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",109,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",109,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",109,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",109,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",109,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",109,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",109,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",109,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",109,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",109,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",109,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",109,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",109,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",109,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",109,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",109,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",109,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",110,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",110,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"next_back","","",110,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",111,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"next_back","","",111,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",111,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",112,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",112,null],[11,"next_back","","",112,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"next_back","","",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",109,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",114,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",115,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",116,null],[11,"fmt","","",116,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",116,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",116,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",116,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",116,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",116,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",116,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",116,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",116,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",116,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",116,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",116,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",116,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",116,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",116,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",116,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",116,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",116,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",116,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",116,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",116,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",116,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",116,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",116,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",116,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",116,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",116,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",116,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",117,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",117,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",118,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"next_back","","",118,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",119,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next_back","","",119,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",116,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",120,null],[11,"next","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"count","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",120,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",121,null],[11,"next","","",121,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"count","","",121,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",121,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",121,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",121,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",122,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next_back","","",122,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",122,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",123,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",123,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",123,null],[11,"next_back","","",123,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",124,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",124,null],[11,"next","","",125,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",125,null],[11,"next","","",126,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",126,null],[11,"next","","",127,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next","","",128,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",128,null],[11,"clone","","",129,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",129,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",129,null],[11,"count","","",129,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",129,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",129,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",129,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",130,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",130,null],[11,"count","","",130,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",130,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",130,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",130,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",131,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",131,null],[11,"count","","",131,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",131,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",131,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",131,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",132,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",132,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",133,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",134,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",133,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",133,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",133,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",135,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",135,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",135,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",135,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",135,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",135,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",135,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",135,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",136,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",136,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",136,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",136,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",136,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",136,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",136,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",137,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",137,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",137,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",137,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",137,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",137,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",137,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",137,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",138,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",138,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",139,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",139,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",140,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",138,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",138,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",138,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",138,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",138,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",141,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",142,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",142,null],[11,"matching","","",142,null],[11,"use_early_reject","","",143,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",143,null],[11,"matching","","",143,null],[11,"eq","core::str","",144,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",144,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",145,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",145,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",145,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",146,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",146,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",146,null],[11,"next_back","","",146,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",146,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",147,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",147,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",147,null],[11,"next_back","","",147,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",147,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",148,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",148,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",148,null],[11,"count","","",148,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",148,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",148,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",148,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",148,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",149,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",150,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",150,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",151,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",151,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",150,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",151,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",152,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",152,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",153,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",153,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",152,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",153,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",154,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",155,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",155,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",156,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",156,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",157,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",158,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",158,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",159,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",159,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",158,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",159,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",160,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",161,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",161,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",162,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",162,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",161,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",162,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",163,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",163,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",163,null],[11,"next_back","","",163,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",164,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",165,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",165,null],[11,"call_mut","","",165,null],[11,"call_once","","",165,null],[11,"next","","",164,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",164,null],[11,"next_back","","",164,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",166,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",167,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",167,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",167,null],[11,"finish","","",167,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",167,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",167,{"inputs":[],"output":{"name":"siphasher"}}],[11,"build_hasher","core::hash","",168,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",168,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",168,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"eq","core::fmt::num","",169,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",169,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",170,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",170,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",171,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",172,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",172,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",173,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",173,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",174,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",174,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",175,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",176,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",177,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",177,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",178,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",178,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",178,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",179,null],[11,"entry","","Adds a new entry to the set output.",180,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",180,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",180,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",181,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",181,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",181,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",182,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",182,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",182,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"fmt","core::fmt","",183,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",183,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",184,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",185,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",186,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",186,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",187,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",187,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",187,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",187,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",187,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",187,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",187,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",187,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",187,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",187,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",187,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",187,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",187,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",187,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",187,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",187,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",187,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",187,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",187,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",187,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",187,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",183,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",60,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",74,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Range","rsaltpack::armor","A (half-open) range which is bounded at both ends.",null,null],[12,"start","","The lower bound of the range (inclusive).",52,null],[12,"end","","The upper bound of the range (exclusive).",52,null],[3,"ArmoringStream","","Can be used as a streaming interface to armor large amounts of binary data.\nBut it is not recommended to use the armored version to send big amounts of\ndata. It is slow and inefficient.",null,null],[5,"armor","","This function is a short interface to ArmoringStream.\nIt will convert binary input into the base62 armored version including\nheader and footer.",null,null],[5,"alphabet","","This function converts a zero based digit in base 62 to its ascii equivalent.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u8"}}],[5,"b32bytes_to_base62_formatted","","This function armors one 32 byte block into 43 base62 characters.",null,null],[17,"SPACE_EVERY","","The armored string will contain a space every 15 characters.",null,null],[17,"NEWLINE_EVERY","","The armored string will contain a newline instead of a space every 200 words.",null,null],[11,"new","","Create a new streaming interface",188,{"inputs":[{"name":"str"},{"name":"saltpackmessagetype"}],"output":{"name":"result"}}],[11,"predict_armored_len","","Predicts the total length of armored data including header and footer.\nSince the armored version is guaranteed to contain only ascii characters,\nthe (armored output as [u8]).len() equals its utf-8 size.",188,{"inputs":[{"name":"armoringstream"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"armor","","Reads bytes from `binary_in` and writes the armored version into `armored_out`\nIf binary_in contains the last bytes that have to be written, set last_bytes to\ntrue. Then the footer will be written.",188,null],[11,"is_done","","Returns `true` if header, data and footer have been written completely.",188,{"inputs":[{"name":"armoringstream"}],"output":{"name":"bool"}}],[11,"cancel","","Stops writing and reading anything. `is_done` will be `true`.",188,{"inputs":[{"name":"armoringstream"}],"output":null}],[11,"fmt","","",188,{"inputs":[{"name":"armoringstream"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"dearmor","rsaltpack","",null,null],[3,"Range","rsaltpack::dearmor","A (half-open) range which is bounded at both ends.",null,null],[12,"start","","The lower bound of the range (inclusive).",52,null],[12,"end","","The upper bound of the range (exclusive).",52,null],[3,"ArmorInfo","","",null,null],[12,"vendorstring","","",189,null],[12,"messagetype","","",189,null],[3,"Dearmored","","",null,null],[12,"meta","","",190,null],[12,"binary","","",190,null],[3,"Base62Blocks","","",null,null],[5,"dearmor","","",null,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[5,"strip_whitespace","","",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"assert_and_strip_header_and_footer","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"convert_to_bytes","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"base62_to_bin","","",null,null],[11,"eq","","",189,{"inputs":[{"name":"armorinfo"},{"name":"armorinfo"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"armorinfo"},{"name":"armorinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",189,{"inputs":[{"name":"armorinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",190,{"inputs":[{"name":"dearmored"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"dealphabet","","#[inline]",191,{"inputs":[{"name":"u8"}],"output":{"name":"u8"}}],[0,"util","rsaltpack","",null,null],[8,"Consumable","rsaltpack::util","This trait provides the consume() method.",null,null],[10,"consume","","",192,{"inputs":[{"name":"consumable"},{"name":"usize"}],"output":null}],[11,"gen","rsaltpack","",45,{"inputs":[],"output":{"name":"keypair"}}],[11,"eq","","",46,{"inputs":[{"name":"saltpackmessagetype"},{"name":"saltpackmessagetype"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"saltpackmessagetype"},{"name":"saltpackmessagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"saltpackmessagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_int","","",46,{"inputs":[{"name":"saltpackmessagetype"}],"output":{"name":"u32"}}],[11,"to_string","","",46,{"inputs":[{"name":"saltpackmessagetype"}],"output":{"name":"string"}}]],"paths":[[3,"PublicKey"],[3,"SecretKey"],[3,"CBNonce"],[3,"PrecomputedKey"],[3,"Seed"],[3,"SecretKey"],[3,"PublicKey"],[3,"Signature"],[3,"SecretKey"],[3,"PublicKey"],[3,"Scalar"],[3,"GroupElement"],[3,"Key"],[3,"Tag"],[3,"State"],[3,"Key"],[3,"Tag"],[3,"State"],[3,"Key"],[3,"Tag"],[3,"State"],[3,"Digest"],[3,"Digest"],[3,"Key"],[3,"SBNonce"],[3,"Key"],[3,"Tag"],[3,"OpsLimit"],[3,"MemLimit"],[3,"Salt"],[3,"HashedPassword"],[3,"Key"],[3,"Nonce"],[3,"Key"],[3,"Nonce"],[3,"Key"],[3,"Nonce"],[3,"Key"],[3,"Nonce"],[3,"Key"],[3,"Nonce"],[3,"Key"],[3,"Nonce"],[3,"Digest"],[3,"Key"],[3,"KeyPair"],[4,"SaltpackMessageType"],[3,"Saltpack"],[3,"ArmoredSaltpack"],[4,"ParseError"],[3,"Recipient"],[3,"SaltpackHeader10"],[3,"Range"],[3,"Wrapping"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"ArmoringStream"],[3,"ArmorInfo"],[3,"Dearmored"],[3,"Base62Blocks"],[8,"Consumable"]]};
initSearch(searchIndex);
